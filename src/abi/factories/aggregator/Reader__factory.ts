/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Reader, ReaderInterface } from "../../aggregator/Reader";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IProxyFactory",
        name: "aggregatorFactory_",
        type: "address",
      },
      {
        internalType: "contract IGmxVault",
        name: "gmxVault_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "weth_",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "usdg_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gmxV2DataStore_",
        type: "address",
      },
      {
        internalType: "contract IReader",
        name: "gmxV2Reader_",
        type: "address",
      },
      {
        internalType: "address",
        name: "gmxV2ReferralStorage_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "GMX_V2_CLAIMABLE_FUNDING_AMOUNT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GMX_V2_LONG_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GMX_V2_SHORT_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregatorFactory",
    outputs: [
      {
        internalType: "contract IProxyFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxPositionRouter",
        name: "gmxPositionRouter",
        type: "address",
      },
      {
        internalType: "contract IGmxOrderBook",
        name: "gmxOrderBook",
        type: "address",
      },
      {
        internalType: "address",
        name: "accountAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "indexTokenPrice",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "longTokenPrice",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "shortTokenPrice",
                type: "tuple",
              },
            ],
            internalType: "struct IMarket.MarketPrices",
            name: "prices",
            type: "tuple",
          },
        ],
        internalType: "struct Reader.GmxV2Price[]",
        name: "gmxV2Prices",
        type: "tuple[]",
      },
    ],
    name: "getAggregatorSubAccountsOfAccount",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "proxyAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collateralAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidating",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "cumulativeDebt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "debtEntryFunding",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proxyCollateralBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proxyEthBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastIncreasedTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFundingRate",
                type: "uint256",
              },
            ],
            internalType: "struct Reader.GmxCoreAccount",
            name: "gmx",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "orderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "isFillOrCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggerAboveThreshold",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "tpOrderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "slOrderHistoryKey",
                type: "bytes32",
              },
            ],
            internalType: "struct Reader.GmxAdapterOrder[]",
            name: "gmxOrders",
            type: "tuple[]",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "account",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "market",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "collateralToken",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPosition.Addresses",
                    name: "addresses",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "sizeInUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "sizeInTokens",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "collateralAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "fundingFeeAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "increasedAtTime",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "decreasedAtTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPosition.Numbers",
                    name: "numbers",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bool",
                        name: "isLong",
                        type: "bool",
                      },
                    ],
                    internalType: "struct IPosition.Flags",
                    name: "flags",
                    type: "tuple",
                  },
                ],
                internalType: "struct IPosition.Props",
                name: "position",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "referralCode",
                        type: "bytes32",
                      },
                      {
                        internalType: "address",
                        name: "affiliate",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "totalRebateFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "affiliateRewardFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "adjustedAffiliateRewardFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "totalRebateAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "affiliateRewardAmount",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionReferralFees",
                    name: "referral",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "traderTier",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountAmount",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionProFees",
                    name: "pro",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "fundingFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "claimableLongTokenAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "claimableShortTokenAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestFundingFeeAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestLongTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestShortTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionFundingFees",
                    name: "funding",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "borrowingFeeUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeAmountForFeeReceiver",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionBorrowingFees",
                    name: "borrowing",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "uiFeeReceiver",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "uiFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "uiFeeAmount",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionUiFees",
                    name: "ui",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "liquidationFeeUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeAmountForFeeReceiver",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionLiquidationFees",
                    name: "liquidation",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "min",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "max",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPrice.Props",
                    name: "collateralTokenPrice",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "protocolFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeReceiverAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeAmountForPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeAmountForPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalCostAmountExcludingFunding",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalCostAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPositionPricing.PositionFees",
                name: "fees",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "priceImpactUsd",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "priceImpactDiffUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct IReader.ExecutionPriceResult",
                name: "executionPriceResult",
                type: "tuple",
              },
              {
                internalType: "int256",
                name: "basePnlUsd",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "pnlAfterPriceImpactUsd",
                type: "int256",
              },
            ],
            internalType: "struct IReader.PositionInfo",
            name: "gmx2",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "claimableFundingAmountLong",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimableFundingAmountShort",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "orderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "isIncrease",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "debt",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "blockNumber",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isFillOrCancel",
                type: "bool",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "account",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "cancellationReceiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "callbackContract",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "uiFeeReceiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "market",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "initialCollateralToken",
                        type: "address",
                      },
                      {
                        internalType: "address[]",
                        name: "swapPath",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct IOrder.Addresses",
                    name: "addresses",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "enum IOrder.OrderType",
                        name: "orderType",
                        type: "uint8",
                      },
                      {
                        internalType: "enum IOrder.DecreasePositionSwapType",
                        name: "decreasePositionSwapType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "sizeDeltaUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "initialCollateralDeltaAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "triggerPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "acceptablePrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "executionFee",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callbackGasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minOutputAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "updatedAtTime",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "validFromTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IOrder.Numbers",
                    name: "numbers",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bool",
                        name: "isLong",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "shouldUnwrapNativeToken",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "isFrozen",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "autoCancel",
                        type: "bool",
                      },
                    ],
                    internalType: "struct IOrder.Flags",
                    name: "flags",
                    type: "tuple",
                  },
                ],
                internalType: "struct IOrder.Props",
                name: "gmxOrder",
                type: "tuple",
              },
            ],
            internalType: "struct Reader.GmxV2AdapterOrder[]",
            name: "gmx2Orders",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.AggregatorSubAccount[]",
        name: "subAccounts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxPositionRouter",
        name: "gmxPositionRouter",
        type: "address",
      },
      {
        internalType: "contract IGmxOrderBook",
        name: "gmxOrderBook",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "proxyAddresses",
        type: "address[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "marketToken",
            type: "address",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "indexTokenPrice",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "longTokenPrice",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "min",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "max",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPrice.Props",
                name: "shortTokenPrice",
                type: "tuple",
              },
            ],
            internalType: "struct IMarket.MarketPrices",
            name: "prices",
            type: "tuple",
          },
        ],
        internalType: "struct Reader.GmxV2Price[]",
        name: "gmxV2Prices",
        type: "tuple[]",
      },
    ],
    name: "getAggregatorSubAccountsOfProxy",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "proxyAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "projectId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "collateralAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "assetAddress",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isLiquidating",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "cumulativeDebt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cumulativeFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "debtEntryFunding",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proxyCollateralBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proxyEthBalance",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "sizeUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastIncreasedTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryFundingRate",
                type: "uint256",
              },
            ],
            internalType: "struct Reader.GmxCoreAccount",
            name: "gmx",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "orderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "isFillOrCancel",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "amountIn",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "collateralDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "sizeDeltaUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "triggerPrice",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "triggerAboveThreshold",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "tpOrderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "slOrderHistoryKey",
                type: "bytes32",
              },
            ],
            internalType: "struct Reader.GmxAdapterOrder[]",
            name: "gmxOrders",
            type: "tuple[]",
          },
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "account",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "market",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "collateralToken",
                        type: "address",
                      },
                    ],
                    internalType: "struct IPosition.Addresses",
                    name: "addresses",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "sizeInUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "sizeInTokens",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "collateralAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "fundingFeeAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "longTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "shortTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "increasedAtTime",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "decreasedAtTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPosition.Numbers",
                    name: "numbers",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bool",
                        name: "isLong",
                        type: "bool",
                      },
                    ],
                    internalType: "struct IPosition.Flags",
                    name: "flags",
                    type: "tuple",
                  },
                ],
                internalType: "struct IPosition.Props",
                name: "position",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "bytes32",
                        name: "referralCode",
                        type: "bytes32",
                      },
                      {
                        internalType: "address",
                        name: "affiliate",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "trader",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "totalRebateFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "affiliateRewardFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "adjustedAffiliateRewardFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "totalRebateAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "affiliateRewardAmount",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionReferralFees",
                    name: "referral",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "traderTier",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "traderDiscountAmount",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionProFees",
                    name: "pro",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "fundingFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "claimableLongTokenAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "claimableShortTokenAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestFundingFeeAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestLongTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "latestShortTokenClaimableFundingAmountPerSize",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionFundingFees",
                    name: "funding",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "borrowingFeeUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "borrowingFeeAmountForFeeReceiver",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionBorrowingFees",
                    name: "borrowing",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "uiFeeReceiver",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "uiFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "uiFeeAmount",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPositionPricing.PositionUiFees",
                    name: "ui",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "liquidationFeeUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeReceiverFactor",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "liquidationFeeAmountForFeeReceiver",
                        type: "uint256",
                      },
                    ],
                    internalType:
                      "struct IPositionPricing.PositionLiquidationFees",
                    name: "liquidation",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "uint256",
                        name: "min",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "max",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IPrice.Props",
                    name: "collateralTokenPrice",
                    type: "tuple",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "protocolFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeReceiverFactor",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeReceiverAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "feeAmountForPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeAmountForPool",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "positionFeeAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalCostAmountExcludingFunding",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalCostAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "totalDiscountAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct IPositionPricing.PositionFees",
                name: "fees",
                type: "tuple",
              },
              {
                components: [
                  {
                    internalType: "int256",
                    name: "priceImpactUsd",
                    type: "int256",
                  },
                  {
                    internalType: "uint256",
                    name: "priceImpactDiffUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "executionPrice",
                    type: "uint256",
                  },
                ],
                internalType: "struct IReader.ExecutionPriceResult",
                name: "executionPriceResult",
                type: "tuple",
              },
              {
                internalType: "int256",
                name: "basePnlUsd",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "pnlAfterPriceImpactUsd",
                type: "int256",
              },
            ],
            internalType: "struct IReader.PositionInfo",
            name: "gmx2",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "claimableFundingAmountLong",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimableFundingAmountShort",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "orderHistoryKey",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "isIncrease",
                type: "bool",
              },
              {
                internalType: "uint256",
                name: "debt",
                type: "uint256",
              },
              {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
              },
              {
                internalType: "uint256",
                name: "blockNumber",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isFillOrCancel",
                type: "bool",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "account",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "receiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "cancellationReceiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "callbackContract",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "uiFeeReceiver",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "market",
                        type: "address",
                      },
                      {
                        internalType: "address",
                        name: "initialCollateralToken",
                        type: "address",
                      },
                      {
                        internalType: "address[]",
                        name: "swapPath",
                        type: "address[]",
                      },
                    ],
                    internalType: "struct IOrder.Addresses",
                    name: "addresses",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "enum IOrder.OrderType",
                        name: "orderType",
                        type: "uint8",
                      },
                      {
                        internalType: "enum IOrder.DecreasePositionSwapType",
                        name: "decreasePositionSwapType",
                        type: "uint8",
                      },
                      {
                        internalType: "uint256",
                        name: "sizeDeltaUsd",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "initialCollateralDeltaAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "triggerPrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "acceptablePrice",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "executionFee",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "callbackGasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "minOutputAmount",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "updatedAtTime",
                        type: "uint256",
                      },
                      {
                        internalType: "uint256",
                        name: "validFromTime",
                        type: "uint256",
                      },
                    ],
                    internalType: "struct IOrder.Numbers",
                    name: "numbers",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        internalType: "bool",
                        name: "isLong",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "shouldUnwrapNativeToken",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "isFrozen",
                        type: "bool",
                      },
                      {
                        internalType: "bool",
                        name: "autoCancel",
                        type: "bool",
                      },
                    ],
                    internalType: "struct IOrder.Flags",
                    name: "flags",
                    type: "tuple",
                  },
                ],
                internalType: "struct IOrder.Props",
                name: "gmxOrder",
                type: "tuple",
              },
            ],
            internalType: "struct Reader.GmxV2AdapterOrder[]",
            name: "gmx2Orders",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.AggregatorSubAccount[]",
        name: "subAccounts",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IGmxBasePositionManager",
        name: "gmxPositionManager",
        type: "address",
      },
      {
        internalType: "contract IGmxPositionRouter",
        name: "gmxPositionRouter",
        type: "address",
      },
      {
        internalType: "contract IGmxOrderBook",
        name: "gmxOrderBook",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "gmxAggregatorCollateralAddresses",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "gmxTokenAddresses",
        type: "address[]",
      },
    ],
    name: "getGmxAdapterStorage",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "borrowSource",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "boostFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maintenanceMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidationFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrow",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "borrowLimit",
                type: "uint256",
              },
            ],
            internalType: "struct Reader.MuxCollateral[]",
            name: "collaterals",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "totalTokenWeights",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minProfitTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minExecutionFee",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidationFeeUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "_marginFeeBasisPoints",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "swapFeeBasisPoints",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stableSwapFeeBasisPoints",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "taxBasisPoints",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "stableTaxBasisPoints",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "usdgSupply",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "minProfit",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "weight",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxUsdgAmounts",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxGlobalShortSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "maxGlobalLongSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "poolAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "reservedAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "usdgAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "redemptionAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "bufferAmounts",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "globalShortSize",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "contractMinPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "contractMaxPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "guaranteedUsd",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "fundingRate",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "cumulativeFundingRate",
                    type: "uint256",
                  },
                ],
                internalType: "struct Reader.GmxToken[]",
                name: "tokens",
                type: "tuple[]",
              },
            ],
            internalType: "struct Reader.GmxCoreStorage",
            name: "gmx",
            type: "tuple",
          },
        ],
        internalType: "struct Reader.GmxAdapterStorage",
        name: "store",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "gmxV2MarketsAddresses",
        type: "address[]",
      },
    ],
    name: "getGmxV2AdapterStorage",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "boostFeeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "initialMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maintenanceMarginRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "liquidationFeeRate",
                type: "uint256",
              },
            ],
            internalType: "struct Reader.AggregatorMarketConfig[]",
            name: "markets",
            type: "tuple[]",
          },
        ],
        internalType: "struct Reader.GmxV2AdapterStorage",
        name: "store2",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "getLiquiditySource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "proxyAddress",
        type: "address",
      },
    ],
    name: "getProxyProjectId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxV2DataStore",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxV2Reader",
    outputs: [
      {
        internalType: "contract IReader",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxV2ReferralStorage",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gmxVault",
    outputs: [
      {
        internalType: "contract IGmxVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionKey",
        type: "bytes32",
      },
    ],
    name: "hasGmxV2Position",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "usdg",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Reader__factory {
  static readonly abi = _abi;
  static createInterface(): ReaderInterface {
    return new utils.Interface(_abi) as ReaderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Reader {
    return new Contract(address, _abi, signerOrProvider) as Reader;
  }
}
