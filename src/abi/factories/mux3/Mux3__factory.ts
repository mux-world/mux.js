/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Mux3, Mux3Interface } from "../../mux3/Mux3";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "len1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "len2",
        type: "uint256",
      },
    ],
    name: "AllocationLengthMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionSize1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSize2",
        type: "uint256",
      },
    ],
    name: "AllocationPositionMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "ArrayAppendFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "maxX",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "xi",
        type: "int256",
      },
    ],
    name: "BadAllocation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "old",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "appending",
        type: "uint256",
      },
    ],
    name: "CapacityExceeded",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "CollateralAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "CollateralNotExist",
    type: "error",
  },
  {
    inputs: [],
    name: "CreateProxyFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "DuplicatedAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "EssentialConfigNotSet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "expectedId",
        type: "bytes32",
      },
    ],
    name: "IdMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "leverageLimit",
        type: "uint256",
      },
    ],
    name: "InitialLeverageOutOfRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "required",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remain",
        type: "uint256",
      },
    ],
    name: "InsufficientCollateral",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredAmount",
        type: "uint256",
      },
    ],
    name: "InsufficientCollateralBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredUsd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "remainUsd",
        type: "uint256",
      },
    ],
    name: "InsufficientCollateralUsd",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requiredLiquidity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientLiquidity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "InvalidArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "closingSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSize",
        type: "uint256",
      },
    ],
    name: "InvalidCloseSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "InvalidDecimals",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "positionSize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lotSize",
        type: "uint256",
      },
    ],
    name: "InvalidLotSize",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "InvalidMarketId",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "InvalidPrice",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "InvalidPriceExpiration",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "InvalidPriceTimestamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sequence",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedSequence",
        type: "uint256",
      },
    ],
    name: "InvalidSequence",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "InvalidSinger",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "LimitPriceNotMet",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "MarketAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketFull",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "MarketNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "MarketTradeDisabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
    ],
    name: "MissingPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "MissingSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "NotOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "OnlySingleMarketPositionAllowed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "OutOfBound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolAlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "PoolBankrupt",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolNotExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "PositionAccountAlreadyExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "PositionAccountNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "PositionNotClosed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
    ],
    name: "PriceExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "safeType",
        type: "uint256",
      },
    ],
    name: "SafePositionAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "UnauthorizedAgent",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedCaller",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requiredRole",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedRole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "UnexpectedState",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectDecimals",
        type: "uint256",
      },
    ],
    name: "UnmatchedDecimals",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "safeType",
        type: "uint256",
      },
    ],
    name: "UnsafePositionAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isStable",
        type: "bool",
      },
    ],
    name: "AddCollateralToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
    ],
    name: "AppendBackedPoolsToMarket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newSizes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newEntryPrices",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "poolPnlUsds",
        type: "int256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newCollateralTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newCollateralAmounts",
        type: "uint256[]",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "CollectFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "collateralDecimals",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "CreateCollateralPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
    ],
    name: "CreateMarket",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "CreatePositionAccount",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newCollateralTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newCollateralAmounts",
        type: "uint256[]",
      },
    ],
    name: "DepositWithdrawFinish",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "poolPnlUsds",
        type: "int256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newCollateralTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newCollateralAmounts",
        type: "uint256[]",
      },
    ],
    name: "LiquidatePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "allocations",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newSizes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newEntryPrices",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newCollateralTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newCollateralAmounts",
        type: "uint256[]",
      },
    ],
    name: "OpenPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "toPool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tradingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fromPoolOldEntryPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newSizes",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newEntryPrices",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "poolPnlUsds",
        type: "int256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "newCollateralTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newCollateralAmounts",
        type: "uint256[]",
      },
    ],
    name: "ReallocatePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "SetCollateralPoolConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "SetCollateralPoolImplementation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "SetCollateralTokenEnabled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "SetConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
    ],
    name: "SetInitialLeverage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "SetMarketConfig",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "SetOracleProvider",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "strictStable",
        type: "bool",
      },
    ],
    name: "SetStrictStableId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "SetValue",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "borrowingFeeUsd",
        type: "uint256",
      },
    ],
    name: "UpdatePositionBorrowingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralWad",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isStable",
        type: "bool",
      },
    ],
    name: "addCollateralToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
    ],
    name: "appendBackedPoolsToMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "marketId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
        ],
        internalType: "struct IFacetClose.ClosePositionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "closePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tradingPrice",
            type: "uint256",
          },
          {
            internalType: "int256[]",
            name: "poolPnlUsds",
            type: "int256[]",
          },
          {
            internalType: "uint256",
            name: "borrowingFeeUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionFeeUsd",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetClose.ClosePositionResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "configValue",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "expectedPoolCount",
        type: "uint256",
      },
    ],
    name: "createCollateralPool",
    outputs: [
      {
        internalType: "address",
        name: "poolAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "backedPools",
        type: "address[]",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "getCollateralPool",
    outputs: [
      {
        internalType: "bool",
        name: "isExist",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getCollateralToken",
    outputs: [
      {
        internalType: "bool",
        name: "isExist",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isStable",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "getPositionAccount",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "marketId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastIncreasedTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realizedBorrowingUsd",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "poolAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "size",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryBorrowing",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPoolReader[]",
            name: "pools",
            type: "tuple[]",
          },
        ],
        internalType: "struct PositionReader",
        name: "position",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "weth_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "isDeleverageAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
        ],
        internalType: "struct IFacetClose.LiquidateArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "liquidate",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bytes32",
                name: "marketId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "tradingPrice",
                type: "uint256",
              },
              {
                internalType: "int256[]",
                name: "poolPnlUsds",
                type: "int256[]",
              },
              {
                internalType: "uint256",
                name: "borrowingFeeUsd",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "positionFeeUsd",
                type: "uint256",
              },
            ],
            internalType: "struct IFacetClose.LiquidatePositionResult[]",
            name: "positions",
            type: "tuple[]",
          },
        ],
        internalType: "struct IFacetClose.LiquidateResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "listAccountCollaterals",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collateralAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralAmount",
            type: "uint256",
          },
        ],
        internalType: "struct CollateralReader[]",
        name: "collaterals",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
    ],
    name: "listAccountPositions",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "marketId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "initialLeverage",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastIncreasedTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realizedBorrowingUsd",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "poolAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "size",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryPrice",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "entryBorrowing",
                type: "uint256",
              },
            ],
            internalType: "struct PositionPoolReader[]",
            name: "pools",
            type: "tuple[]",
          },
        ],
        internalType: "struct PositionReader[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "listActiveCollateralsAndPositions",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct CollateralReader[]",
            name: "collaterals",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "marketId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "initialLeverage",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastIncreasedTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "realizedBorrowingUsd",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "poolAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "size",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryBorrowing",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPoolReader[]",
                name: "pools",
                type: "tuple[]",
              },
            ],
            internalType: "struct PositionReader[]",
            name: "positions",
            type: "tuple[]",
          },
        ],
        internalType: "struct AccountReader[]",
        name: "positions",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "totalLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "begin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    name: "listActivePositionIds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "positionIds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "totalLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listCollateralPool",
    outputs: [
      {
        internalType: "address[]",
        name: "pools",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listCollateralTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "listCollateralsAndPositionsOf",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "collateralAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralAmount",
                type: "uint256",
              },
            ],
            internalType: "struct CollateralReader[]",
            name: "collaterals",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "marketId",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "initialLeverage",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "lastIncreasedTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "realizedBorrowingUsd",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "poolAddress",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "size",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryPrice",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "entryBorrowing",
                    type: "uint256",
                  },
                ],
                internalType: "struct PositionPoolReader[]",
                name: "pools",
                type: "tuple[]",
              },
            ],
            internalType: "struct PositionReader[]",
            name: "positions",
            type: "tuple[]",
          },
        ],
        internalType: "struct AccountReader[]",
        name: "positions",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "listMarketPools",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "backedPool",
            type: "address",
          },
        ],
        internalType: "struct BackedPoolState[]",
        name: "pools",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listMarkets",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "marketIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "trader",
        type: "address",
      },
    ],
    name: "listPositionIdsOf",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "positionIds",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "marketConfigValue",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
    ],
    name: "marketState",
    outputs: [
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "marketId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
        ],
        internalType: "struct IFacetOpen.OpenPositionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "openPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tradingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeeUsd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "positionFeeUsd",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetOpen.OpenPositionResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "priceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
    ],
    name: "priceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "marketId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "fromPool",
            type: "address",
          },
          {
            internalType: "address",
            name: "toPool",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
        ],
        internalType: "struct IFacetOpen.ReallocatePositionArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "reallocatePosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tradingPrice",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowingFeeUsd",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetOpen.ReallocatePositionResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "setCollateralPoolImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
    ],
    name: "setInitialLeverage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "setMarketConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "oracleProvider",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isValid",
        type: "bool",
      },
    ],
    name: "setOracleProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "setPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "oracleCalldata",
        type: "bytes",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "oracleId",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "strictStable",
        type: "bool",
      },
    ],
    name: "setStrictStableId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "positionId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "marketId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "lastConsumedToken",
        type: "address",
      },
      {
        internalType: "bool",
        name: "isUnwrapWeth",
        type: "bool",
      },
    ],
    name: "updateBorrowingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "collateralToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
          {
            internalType: "address",
            name: "withdrawSwapToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "withdrawSwapSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetPositionAccount.WithdrawArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
          {
            internalType: "address",
            name: "withdrawSwapToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "withdrawSwapSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetPositionAccount.WithdrawAllArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "positionId",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "collateralUsd",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "lastConsumedToken",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isUnwrapWeth",
            type: "bool",
          },
          {
            internalType: "address",
            name: "withdrawSwapToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "withdrawSwapSlippage",
            type: "uint256",
          },
        ],
        internalType: "struct IFacetPositionAccount.WithdrawUsdArgs",
        name: "args",
        type: "tuple",
      },
    ],
    name: "withdrawUsd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class Mux3__factory {
  static readonly abi = _abi;
  static createInterface(): Mux3Interface {
    return new utils.Interface(_abi) as Mux3Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Mux3 {
    return new Contract(address, _abi, signerOrProvider) as Mux3;
  }
}
